name: Go Cross-Platform Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    name: Build for ${{ matrix.os }}/${{ matrix.arch }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: ["linux", "windows", "darwin"]
        arch: ["amd64", "arm64"]
        # 排除不支持的组合，例如 Windows on ARM64
        # exclude:
        #   - os: windows
        #     arch: arm64

    steps:
      # 步骤1：检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 步骤2：设置 Go 环境
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25.x"

      # 步骤3：执行编译
      - name: Build
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          # 构建输出文件名
          output_name="dns-optimizer-${{ matrix.os }}-${{ matrix.arch }}"
          if [ "${{ matrix.os }}" = "windows" ]; then
            output_name+=".exe"
          fi

          # 执行编译，并把文件名存入环境变量以便下一步使用
          go build -ldflags="-s -w" -o "$output_name" .
          echo "BINARY_PATH=$output_name" >> $GITHUB_ENV

      # 步骤4：上传构建产物 (Artifact)
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dns-optimizer-${{ matrix.os }}-${{ matrix.arch }}
          path: ${{ env.BINARY_PATH }}
