name: Create Release and Build Binaries

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build for ${{ matrix.os }}/${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: ["linux", "windows", "darwin"]
        arch: ["amd64", "arm64"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25.x"

      - name: Build
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          output_name="dns-optimizer-${{ matrix.os }}-${{ matrix.arch }}"
          if [ "${{ matrix.os }}" = "windows" ]; then
            output_name+=".exe"
          fi

          go build -ldflags="-s -w" -o "$output_name" .

          if [ "${{ matrix.os }}" = "windows" ]; then
            7z a "${output_name}.zip" "$output_name"
            echo "ASSET_PATH=${output_name}.zip" >> $GITHUB_ENV
          else
            tar -czvf "${output_name}.tar.gz" "$output_name"
            echo "ASSET_PATH=${output_name}.tar.gz" >> $GITHUB_ENV
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dns-optimizer-${{ matrix.os }}-${{ matrix.arch }}
          path: ${{ env.ASSET_PATH }}

  # Job 2: 创建 GitHub Release
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build

    permissions:
      contents: write

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref }}
          generate_release_notes: true
          files: |
            artifacts/**/*
